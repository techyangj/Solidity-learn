{
	"id": "6f0accb05e09e53de128d553126ab406",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleStorage.sol": {
				"content": "// SPDX\npragma solidity ^0.8.8;\n\ncontract SimpleStorage {\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SimpleStorage.sol": {
				"SimpleStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleStorage.sol\":33:64  contract SimpleStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleStorage.sol\":33:64  contract SimpleStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122072cabb81b91411aa62713bc0a966f9232e47a92d39ea5a59fe76f62e02b4aa5f64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122072cabb81b91411aa62713bc0a966f9232e47a92d39ea5a59fe76f62e02b4aa5f64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xCABB81B91411AA62713BC0A966F9232E47A92D CODECOPY 0xEA GAS MSIZE INVALID PUSH23 0xF62E02B4AA5F64736F6C63430008090033000000000000 ",
							"sourceMap": "33:31:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122072cabb81b91411aa62713bc0a966f9232e47a92d39ea5a59fe76f62e02b4aa5f64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xCABB81B91411AA62713BC0A966F9232E47A92D CODECOPY 0xEA GAS MSIZE INVALID PUSH23 0xF62E02B4AA5F64736F6C63430008090033000000000000 ",
							"sourceMap": "33:31:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33,
									"end": 64,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33,
									"end": 64,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33,
									"end": 64,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 64,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 64,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 64,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 64,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 64,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 64,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33,
									"end": 64,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 64,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072cabb81b91411aa62713bc0a966f9232e47a92d39ea5a59fe76f62e02b4aa5f64736f6c63430008090033",
									".code": [
										{
											"begin": 33,
											"end": 64,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33,
											"end": 64,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33,
											"end": 64,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 64,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 64,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 64,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleStorage.sol\":\"SimpleStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleStorage.sol\":{\"keccak256\":\"0x851f5d8b556fb45977b23d1628626a2fef1d06a574a4e68acd5746a127462f56\",\"urls\":[\"bzz-raw://9a17849900ddbdb638ea7648b633a127d52e9ad095e231a18d1dd3867451028c\",\"dweb:/ipfs/QmeKzgaF9esexdmjeUqWKCzHhpbsbZud3miXNypxHn15Qj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SimpleStorage.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/SimpleStorage.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SimpleStorage.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleStorage.sol",
					"exportedSymbols": {
						"SimpleStorage": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "8:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "SimpleStorage",
							"nameLocation": "42:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "33:31:0",
							"usedErrors": []
						}
					],
					"src": "8:56:0"
				},
				"id": 0
			}
		}
	}
}