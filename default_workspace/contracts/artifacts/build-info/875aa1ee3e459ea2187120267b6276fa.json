{
	"id": "875aa1ee3e459ea2187120267b6276fa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleStorage.sol": {
				"content": "//\npragma solidity ^0.8.8;\n\ncontract SimpleStorage {\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SimpleStorage.sol": {
				"SimpleStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleStorage.sol\":28:59  contract SimpleStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleStorage.sol\":28:59  contract SimpleStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206747a6af224cf076f35ef2b21892ecce7ed91bbf70e6519902e9c3b8b905ff3364736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212206747a6af224cf076f35ef2b21892ecce7ed91bbf70e6519902e9c3b8b905ff3364736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x47A6AF224CF076F3 0x5E CALLCODE 0xB2 XOR SWAP3 0xEC 0xCE PUSH31 0xD91BBF70E6519902E9C3B8B905FF3364736F6C634300080900330000000000 ",
							"sourceMap": "28:31:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212206747a6af224cf076f35ef2b21892ecce7ed91bbf70e6519902e9c3b8b905ff3364736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x47A6AF224CF076F3 0x5E CALLCODE 0xB2 XOR SWAP3 0xEC 0xCE PUSH31 0xD91BBF70E6519902E9C3B8B905FF3364736F6C634300080900330000000000 ",
							"sourceMap": "28:31:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28,
									"end": 59,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28,
									"end": 59,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28,
									"end": 59,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 59,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 59,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206747a6af224cf076f35ef2b21892ecce7ed91bbf70e6519902e9c3b8b905ff3364736f6c63430008090033",
									".code": [
										{
											"begin": 28,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28,
											"end": 59,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 59,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28,
											"end": 59,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleStorage.sol\":\"SimpleStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleStorage.sol\":{\"keccak256\":\"0xb9841bc4f2baa3d8a6c5e3f0158181c11dec8ecb49fad40d1b937b09229815c6\",\"urls\":[\"bzz-raw://ed4d9679132625bdd9a6268cd5681b8b0062613a59c6c4f60840bde2021a0bdc\",\"dweb:/ipfs/QmUnF2BgDLa8TdKG2qT2Ec7AUGBjsshaEKBSux7PCf1ef2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SimpleStorage.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/SimpleStorage.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SimpleStorage.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleStorage.sol",
					"exportedSymbols": {
						"SimpleStorage": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "3:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "SimpleStorage",
							"nameLocation": "37:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "28:31:0",
							"usedErrors": []
						}
					],
					"src": "3:56:0"
				},
				"id": 0
			}
		}
	}
}