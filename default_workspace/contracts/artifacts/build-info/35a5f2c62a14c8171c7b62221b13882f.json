{
	"id": "35a5f2c62a14c8171c7b62221b13882f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FixedMath_test.sol": {
				"content": "//SPDX-Licenes-Identifier: GPL-3.0\n\npragma solidity ^0.8.8;\n\n\n\ncontract FixedMath_test {\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/FixedMath_test.sol": {
				"FixedMath_test": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FixedMath_test.sol\":63:91  contract FixedMath_test {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FixedMath_test.sol\":63:91  contract FixedMath_test {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a4c9ca37e92c8079da0a8be4b49607b986225e15ebcd674ec274e076dc1f458e64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a4c9ca37e92c8079da0a8be4b49607b986225e15ebcd674ec274e076dc1f458e64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xC9 0xCA CALLDATACOPY 0xE9 0x2C DUP1 PUSH26 0xDA0A8BE4B49607B986225E15EBCD674EC274E076DC1F458E6473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "63:28:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220a4c9ca37e92c8079da0a8be4b49607b986225e15ebcd674ec274e076dc1f458e64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xC9 0xCA CALLDATACOPY 0xE9 0x2C DUP1 PUSH26 0xDA0A8BE4B49607B986225E15EBCD674EC274E076DC1F458E6473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "63:28:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 91,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 91,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 91,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 91,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 91,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 91,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 91,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 91,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 91,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 91,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 91,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a4c9ca37e92c8079da0a8be4b49607b986225e15ebcd674ec274e076dc1f458e64736f6c634300080f0033",
									".code": [
										{
											"begin": 63,
											"end": 91,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 91,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 91,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 91,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 91,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 91,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/FixedMath_test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FixedMath_test.sol\":\"FixedMath_test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FixedMath_test.sol\":{\"keccak256\":\"0x021203117379b976b6aca90b4785389eeb53309249684a7fa58ee5ef2479ac7b\",\"urls\":[\"bzz-raw://a2f7e568657dc273ba3d8cf7407a17a726571e2dce1195b30b656dfd891c716f\",\"dweb:/ipfs/Qmdyrpd6A5MTXTJGLNkTGSnkXEVHHfAdU99DN8uYFwFF9F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/FixedMath_test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/FixedMath_test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/FixedMath_test.sol": {
				"ast": {
					"absolutePath": "contracts/FixedMath_test.sol",
					"exportedSymbols": {
						"FixedMath_test": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedMath_test",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "FixedMath_test",
							"nameLocation": "72:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "63:28:0",
							"usedErrors": []
						}
					],
					"src": "36:55:0"
				},
				"id": 0
			}
		}
	}
}