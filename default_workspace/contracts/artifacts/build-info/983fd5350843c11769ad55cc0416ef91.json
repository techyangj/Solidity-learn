{
	"id": "983fd5350843c11769ad55cc0416ef91",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Example.sol": {
				"content": "//SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.6.4 <0.9.0;\n\ncontract Example {\n    function f() public payable returns (bytes4) {\n        assert(this.f.address == address(this));\n        return this.f.selector;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Example.sol": {
				"Example": {
					"abi": [
						{
							"inputs": [],
							"name": "f",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Example.sol\":69:227  contract Example {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Example.sol\":69:227  contract Example {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x26121ff0\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Example.sol\":92:225  function f() public payable returns (bytes4) {... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_4:\n        /* \"contracts/Example.sol\":129:135  bytes4 */\n      0x00\n        /* \"contracts/Example.sol\":180:184  this */\n      address\n        /* \"contracts/Example.sol\":154:185  this.f.address == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Example.sol\":154:158  this */\n      address\n        /* \"contracts/Example.sol\":154:160  this.f */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Example.sol\":154:185  this.f.address == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Example.sol\":147:186  assert(this.f.address == address(this)) */\n      tag_8\n      jumpi\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n    tag_8:\n        /* \"contracts/Example.sol\":203:218  this.f.selector */\n      shl(0xe0, 0x26121ff0)\n        /* \"contracts/Example.sol\":196:218  return this.f.selector */\n      swap1\n      pop\n        /* \"contracts/Example.sol\":92:225  function f() public payable returns (bytes4) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:156   */\n    tag_11:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:149   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:150   */\n      and\n        /* \"#utility.yul\":61:150   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":162:277   */\n    tag_12:\n        /* \"#utility.yul\":247:270   */\n      tag_16\n        /* \"#utility.yul\":264:269   */\n      dup2\n        /* \"#utility.yul\":247:270   */\n      tag_11\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":242:245   */\n      dup3\n        /* \"#utility.yul\":235:271   */\n      mstore\n        /* \"#utility.yul\":162:277   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":283:501   */\n    tag_6:\n        /* \"#utility.yul\":374:378   */\n      0x00\n        /* \"#utility.yul\":412:414   */\n      0x20\n        /* \"#utility.yul\":401:410   */\n      dup3\n        /* \"#utility.yul\":397:415   */\n      add\n        /* \"#utility.yul\":389:415   */\n      swap1\n      pop\n        /* \"#utility.yul\":425:494   */\n      tag_18\n        /* \"#utility.yul\":491:492   */\n      0x00\n        /* \"#utility.yul\":480:489   */\n      dup4\n        /* \"#utility.yul\":476:493   */\n      add\n        /* \"#utility.yul\":467:473   */\n      dup5\n        /* \"#utility.yul\":425:494   */\n      tag_12\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":283:501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":507:687   */\n    tag_10:\n        /* \"#utility.yul\":555:632   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":552:553   */\n      0x00\n        /* \"#utility.yul\":545:633   */\n      mstore\n        /* \"#utility.yul\":652:656   */\n      0x01\n        /* \"#utility.yul\":649:650   */\n      0x04\n        /* \"#utility.yul\":642:657   */\n      mstore\n        /* \"#utility.yul\":676:680   */\n      0x24\n        /* \"#utility.yul\":673:674   */\n      0x00\n        /* \"#utility.yul\":666:681   */\n      revert\n\n    auxdata: 0xa26469706673582212204197ad2be62c45c7b5e83a8affc988165526021eff066a8193cc86d7de53473a64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061015d806100206000396000f3fe60806040526004361061001e5760003560e01c806326121ff014610023575b600080fd5b61002b610041565b60405161003891906100dd565b60405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610095576100946100f8565b5b6326121ff060e01b905090565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6100d7816100a2565b82525050565b60006020820190506100f260008301846100ce565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea26469706673582212204197ad2be62c45c7b5e83a8affc988165526021eff066a8193cc86d7de53473a64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26121FF0 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B PUSH2 0x41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38 SWAP2 SWAP1 PUSH2 0xDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95 JUMPI PUSH2 0x94 PUSH2 0xF8 JUMP JUMPDEST JUMPDEST PUSH4 0x26121FF0 PUSH1 0xE0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7 DUP2 PUSH2 0xA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SWAP8 0xAD 0x2B 0xE6 0x2C GASLIMIT 0xC7 0xB5 0xE8 GASPRICE DUP11 SELFDESTRUCT 0xC9 DUP9 AND SSTORE 0x26 MUL 0x1E SELFDESTRUCT MOD PUSH11 0x8193CC86D7DE53473A6473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "69:158:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@f_22": {
									"entryPoint": 65,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:690:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "83:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "43:7:1",
														"type": ""
													}
												],
												"src": "7:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "225:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "242:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "264:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "247:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "247:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "235:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "235:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "235:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "220:3:1",
														"type": ""
													}
												],
												"src": "162:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "401:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "397:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "389:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "491:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "476:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "425:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "425:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "351:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "363:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "374:4:1",
														"type": ""
													}
												],
												"src": "283:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "555:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "545:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "545:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "649:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "652:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "642:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "676:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "666:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "507:180:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c806326121ff014610023575b600080fd5b61002b610041565b60405161003891906100dd565b60405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610095576100946100f8565b5b6326121ff060e01b905090565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6100d7816100a2565b82525050565b60006020820190506100f260008301846100ce565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea26469706673582212204197ad2be62c45c7b5e83a8affc988165526021eff066a8193cc86d7de53473a64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26121FF0 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B PUSH2 0x41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38 SWAP2 SWAP1 PUSH2 0xDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95 JUMPI PUSH2 0x94 PUSH2 0xF8 JUMP JUMPDEST JUMPDEST PUSH4 0x26121FF0 PUSH1 0xE0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7 DUP2 PUSH2 0xA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SWAP8 0xAD 0x2B 0xE6 0x2C GASLIMIT 0xC7 0xB5 0xE8 GASPRICE DUP11 SELFDESTRUCT 0xC9 DUP9 AND SSTORE 0x26 MUL 0x1E SELFDESTRUCT MOD PUSH11 0x8193CC86D7DE53473A6473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "69:158:0:-:0;;;;;;;;;;;;;;;;;;;;;92:133;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;129:6;180:4;154:31;;:4;:6;;:31;;;147:39;;;;:::i;:::-;;203:15;;;196:22;;92:133;:::o;7:149:1:-;43:7;83:66;76:5;72:78;61:89;;7:149;;;:::o;162:115::-;247:23;264:5;247:23;:::i;:::-;242:3;235:36;162:115;;:::o;283:218::-;374:4;412:2;401:9;397:18;389:26;;425:69;491:1;480:9;476:17;467:6;425:69;:::i;:::-;283:218;;;;:::o;507:180::-;555:77;552:1;545:88;652:4;649:1;642:15;676:4;673:1;666:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "69800",
								"executionCost": "117",
								"totalCost": "69917"
							},
							"external": {
								"f()": "342"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 69,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 69,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69,
									"end": 227,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 227,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 227,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 227,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 69,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 227,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204197ad2be62c45c7b5e83a8affc988165526021eff066a8193cc86d7de53473a64736f6c634300080f0033",
									".code": [
										{
											"begin": 69,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 69,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69,
											"end": 227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69,
											"end": 227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 227,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 69,
											"end": 227,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "26121FF0"
										},
										{
											"begin": 69,
											"end": 227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 69,
											"end": 227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 227,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 92,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 92,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 92,
											"end": 225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 92,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 92,
											"end": 225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 92,
											"end": 225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 92,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 92,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 184,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 154,
											"end": 185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 154,
											"end": 185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 154,
											"end": 158,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 154,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 154,
											"end": 160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 154,
											"end": 185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 154,
											"end": 185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 154,
											"end": 185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 147,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 147,
											"end": 186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 147,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 147,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 147,
											"end": 186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 186,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 147,
											"end": 186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 186,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 147,
											"end": 186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "26121FF0"
										},
										{
											"begin": 203,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 203,
											"end": 218,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 196,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 196,
											"end": 218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 149,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 72,
											"end": 150,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 61,
											"end": 150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 162,
											"end": 277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 247,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 264,
											"end": 269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 247,
											"end": 270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 247,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 247,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 235,
											"end": 271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 283,
											"end": 501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 397,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 425,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 476,
											"end": 493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 425,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 425,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 425,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 425,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 507,
											"end": 687,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 507,
											"end": 687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 652,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 649,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 680,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 673,
											"end": 674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 681,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Example.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"f()": "26121ff0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"f\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Example.sol\":\"Example\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Example.sol\":{\"keccak256\":\"0x19cd27d9588aeec5f7f7a72074c622ce1776d8fb19c4b16da71f02c08d1c5bbf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cbd897cb26d84fae01c902c92eee6152148a3a493212f0204fa6de1c13e62024\",\"dweb:/ipfs/QmQGmvhdMGbt4me32xXNqns1DDYqE7Ki1aWHUCtmYYygfk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Example.sol": {
				"ast": {
					"absolutePath": "contracts/Example.sol",
					"exportedSymbols": {
						"Example": [
							23
						]
					},
					"id": 24,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".4",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Example",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 23,
							"linearizedBaseContracts": [
								23
							],
							"name": "Example",
							"nameLocation": "78:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "137:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 7,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "154:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Example_$23",
																			"typeString": "contract Example"
																		}
																	},
																	"id": 8,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "f",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "154:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$_t_bytes4_$",
																		"typeString": "function () payable external returns (bytes4)"
																	}
																},
																"id": 9,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "address",
																"nodeType": "MemberAccess",
																"src": "154:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 12,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "180:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Example_$23",
																			"typeString": "contract Example"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Example_$23",
																			"typeString": "contract Example"
																		}
																	],
																	"id": 11,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "172:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 10,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "172:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "172:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "154:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 6,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "147:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "147:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "147:39:0"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 17,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "203:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Example_$23",
																"typeString": "contract Example"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "f",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "203:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$_t_bytes4_$",
															"typeString": "function () payable external returns (bytes4)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "203:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 5,
												"id": 20,
												"nodeType": "Return",
												"src": "196:22:0"
											}
										]
									},
									"functionSelector": "26121ff0",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "f",
									"nameLocation": "101:1:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "129:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "129:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "128:8:0"
									},
									"scope": 23,
									"src": "92:133:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 24,
							"src": "69:158:0",
							"usedErrors": []
						}
					],
					"src": "36:191:0"
				},
				"id": 0
			}
		}
	}
}