{
	"id": "00ef83c688e31fc63da5b0eb133e95be",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"HelloWorld/12ForAndWhileLoops.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract ForAndWhileLoops {\n    function loops() external pure {\n        for(uint i = 0; i < 10; i++) {\n            if(i == 3) {\n                continue;\n            }\n            if(i == 5) {\n                break;\n            }\n        }\n        uint j = 0;\n        while(j < 10){\n            j++;\n        }\n    }\n    function sum(uint _n) external pure returns (uint) {\n        uint s;\n        for(uint i = 1; i <= _n; i++) {\n            s += i;\n        }\n        return s;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"HelloWorld/12ForAndWhileLoops.sol": {
				"ForAndWhileLoops": {
					"abi": [
						{
							"inputs": [],
							"name": "loops",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_n",
									"type": "uint256"
								}
							],
							"name": "sum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"HelloWorld/12ForAndWhileLoops.sol\":56:541  contract ForAndWhileLoops {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":56:541  contract ForAndWhileLoops {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x188b85b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x938b9ceb\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":377:539  function sum(uint _n) external pure returns (uint) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":88:372  function loops() external pure {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":377:539  function sum(uint _n) external pure returns (uint) {... */\n    tag_8:\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":422:426  uint */\n      0x00\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":438:444  uint s */\n      dup1\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":458:464  uint i */\n      0x00\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":467:468  1 */\n      0x01\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":458:468  uint i = 1 */\n      swap1\n      pop\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":454:515  for(uint i = 1; i <= _n; i++) {... */\n    tag_14:\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":475:477  _n */\n      dup4\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":470:471  i */\n      dup2\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":470:477  i <= _n */\n      gt\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":454:515  for(uint i = 1; i <= _n; i++) {... */\n      tag_15\n      jumpi\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":503:504  i */\n      dup1\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":498:504  s += i */\n      dup3\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      swap2\n      pop\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":479:482  i++ */\n      dup1\n      dup1\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      swap2\n      pop\n      pop\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":454:515  for(uint i = 1; i <= _n; i++) {... */\n      jump(tag_14)\n    tag_15:\n      pop\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":531:532  s */\n      dup1\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":524:532  return s */\n      swap2\n      pop\n      pop\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":377:539  function sum(uint _n) external pure returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":88:372  function loops() external pure {... */\n    tag_12:\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":133:139  uint i */\n      0x00\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":129:296  for(uint i = 0; i < 10; i++) {... */\n    tag_22:\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":149:151  10 */\n      0x0a\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":145:146  i */\n      dup2\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":145:151  i < 10 */\n      lt\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":129:296  for(uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_23\n      jumpi\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":180:181  3 */\n      0x03\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":175:176  i */\n      dup2\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":175:181  i == 3 */\n      sub\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":172:224  if(i == 3) {... */\n      iszero\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":201:209  continue */\n      tag_24\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":172:224  if(i == 3) {... */\n      jumpi\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":245:246  5 */\n      0x05\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":240:241  i */\n      dup2\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":240:246  i == 5 */\n      sub\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":237:286  if(i == 5) {... */\n      iszero\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":266:271  break */\n      tag_23\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":237:286  if(i == 5) {... */\n      jumpi\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":129:296  for(uint i = 0; i < 10; i++) {... */\n    tag_24:\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":153:156  i++ */\n      dup1\n      dup1\n      tag_27\n      swap1\n      tag_20\n      jump\t// in\n    tag_27:\n      swap2\n      pop\n      pop\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":129:296  for(uint i = 0; i < 10; i++) {... */\n      jump(tag_22)\n    tag_23:\n      pop\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":305:311  uint j */\n      0x00\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":325:366  while(j < 10){... */\n    tag_28:\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":335:337  10 */\n      0x0a\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":331:332  j */\n      dup2\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":331:337  j < 10 */\n      lt\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":325:366  while(j < 10){... */\n      iszero\n      tag_29\n      jumpi\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":352:355  j++ */\n      dup1\n      dup1\n      tag_30\n      swap1\n      tag_20\n      jump\t// in\n    tag_30:\n      swap2\n      pop\n      pop\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":325:366  while(j < 10){... */\n      jump(tag_28)\n    tag_29:\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":119:372  {... */\n      pop\n        /* \"HelloWorld/12ForAndWhileLoops.sol\":88:372  function loops() external pure {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_32:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_34:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_35:\n        /* \"#utility.yul\":490:514   */\n      tag_45\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_34\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_46\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_46:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_36:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_48\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_51\n      tag_32\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":766:885   */\n    tag_50:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_52\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_36\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_37:\n        /* \"#utility.yul\":1112:1136   */\n      tag_54\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_34\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_10:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_56\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_37\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1557   */\n    tag_38:\n        /* \"#utility.yul\":1425:1502   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1415:1503   */\n      mstore\n        /* \"#utility.yul\":1522:1526   */\n      0x11\n        /* \"#utility.yul\":1519:1520   */\n      0x04\n        /* \"#utility.yul\":1512:1527   */\n      mstore\n        /* \"#utility.yul\":1546:1550   */\n      0x24\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1536:1551   */\n      revert\n        /* \"#utility.yul\":1563:1868   */\n    tag_18:\n        /* \"#utility.yul\":1603:1606   */\n      0x00\n        /* \"#utility.yul\":1622:1642   */\n      tag_59\n        /* \"#utility.yul\":1640:1641   */\n      dup3\n        /* \"#utility.yul\":1622:1642   */\n      tag_34\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1617:1642   */\n      swap2\n      pop\n        /* \"#utility.yul\":1656:1676   */\n      tag_60\n        /* \"#utility.yul\":1674:1675   */\n      dup4\n        /* \"#utility.yul\":1656:1676   */\n      tag_34\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1651:1676   */\n      swap3\n      pop\n        /* \"#utility.yul\":1810:1811   */\n      dup3\n        /* \"#utility.yul\":1742:1808   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1738:1812   */\n      sub\n        /* \"#utility.yul\":1735:1736   */\n      dup3\n        /* \"#utility.yul\":1732:1813   */\n      gt\n        /* \"#utility.yul\":1729:1836   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1816:1834   */\n      tag_62\n      tag_38\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1729:1836   */\n    tag_61:\n        /* \"#utility.yul\":1860:1861   */\n      dup3\n        /* \"#utility.yul\":1857:1858   */\n      dup3\n        /* \"#utility.yul\":1853:1862   */\n      add\n        /* \"#utility.yul\":1846:1862   */\n      swap1\n      pop\n        /* \"#utility.yul\":1563:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2107   */\n    tag_20:\n        /* \"#utility.yul\":1913:1916   */\n      0x00\n        /* \"#utility.yul\":1936:1960   */\n      tag_64\n        /* \"#utility.yul\":1954:1959   */\n      dup3\n        /* \"#utility.yul\":1936:1960   */\n      tag_34\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1927:1960   */\n      swap2\n      pop\n        /* \"#utility.yul\":1982:2048   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1975:1980   */\n      dup3\n        /* \"#utility.yul\":1972:2049   */\n      sub\n        /* \"#utility.yul\":1969:2072   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2052:2070   */\n      tag_66\n      tag_38\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1969:2072   */\n    tag_65:\n        /* \"#utility.yul\":2099:2100   */\n      0x01\n        /* \"#utility.yul\":2092:2097   */\n      dup3\n        /* \"#utility.yul\":2088:2101   */\n      add\n        /* \"#utility.yul\":2081:2101   */\n      swap1\n      pop\n        /* \"#utility.yul\":1874:2107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ae11ee208089beda96431ff8ded70f88dc2501edc23baa48788f397bd894357a64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061029b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063188b85b41461003b578063938b9ceb1461006b575b600080fd5b61005560048036038101906100509190610141565b610075565b604051610062919061017d565b60405180910390f35b6100736100b1565b005b6000806000600190505b8381116100a757808261009291906101c7565b9150808061009f9061021d565b91505061007f565b5080915050919050565b60005b600a8110156100e35760038103156100d05760058103156100e3575b80806100db9061021d565b9150506100b4565b5060005b600a8110156101035780806100fb9061021d565b9150506100e7565b50565b600080fd5b6000819050919050565b61011e8161010b565b811461012957600080fd5b50565b60008135905061013b81610115565b92915050565b60006020828403121561015757610156610106565b5b60006101658482850161012c565b91505092915050565b6101778161010b565b82525050565b6000602082019050610192600083018461016e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101d28261010b565b91506101dd8361010b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561021257610211610198565b5b828201905092915050565b60006102288261010b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361025a57610259610198565b5b60018201905091905056fea2646970667358221220ae11ee208089beda96431ff8ded70f88dc2501edc23baa48788f397bd894357a64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x188B85B4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x938B9CEB EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x141 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xB1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 GT PUSH2 0xA7 JUMPI DUP1 DUP3 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x9F SWAP1 PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xE3 JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0xD0 JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0xE3 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0xDB SWAP1 PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB4 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x103 JUMPI DUP1 DUP1 PUSH2 0xFB SWAP1 PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x10B JUMP JUMPDEST DUP2 EQ PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B DUP2 PUSH2 0x115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157 JUMPI PUSH2 0x156 PUSH2 0x106 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x165 DUP5 DUP3 DUP6 ADD PUSH2 0x12C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177 DUP2 PUSH2 0x10B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x192 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D2 DUP3 PUSH2 0x10B JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD DUP4 PUSH2 0x10B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x212 JUMPI PUSH2 0x211 PUSH2 0x198 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228 DUP3 PUSH2 0x10B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x25A JUMPI PUSH2 0x259 PUSH2 0x198 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE GT 0xEE KECCAK256 DUP1 DUP10 0xBE 0xDA SWAP7 NUMBER 0x1F 0xF8 0xDE 0xD7 0xF DUP9 0xDC 0x25 ADD 0xED 0xC2 EXTCODESIZE 0xAA BASEFEE PUSH25 0x8F397BD894357A64736F6C634300080F003300000000000000 ",
							"sourceMap": "56:485:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loops_41": {
									"entryPoint": 177,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sum_70": {
									"entryPoint": 117,
									"id": 70,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2110:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1405:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1415:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1522:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1512:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1546:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1377:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1607:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1617:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1640:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1622:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1622:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1617:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1651:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1674:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1656:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1651:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1814:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1816:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1816:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1816:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1735:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1742:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1810:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1738:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1738:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1732:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1732:81:1"
															},
															"nodeType": "YulIf",
															"src": "1729:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1846:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1857:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1860:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1846:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1594:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1597:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1603:3:1",
														"type": ""
													}
												],
												"src": "1563:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1917:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1927:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1954:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1936:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1927:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2050:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2052:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2052:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2052:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1975:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1982:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1972:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:77:1"
															},
															"nodeType": "YulIf",
															"src": "1969:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2081:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2092:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2099:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2088:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2088:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2081:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1903:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1913:3:1",
														"type": ""
													}
												],
												"src": "1874:233:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063188b85b41461003b578063938b9ceb1461006b575b600080fd5b61005560048036038101906100509190610141565b610075565b604051610062919061017d565b60405180910390f35b6100736100b1565b005b6000806000600190505b8381116100a757808261009291906101c7565b9150808061009f9061021d565b91505061007f565b5080915050919050565b60005b600a8110156100e35760038103156100d05760058103156100e3575b80806100db9061021d565b9150506100b4565b5060005b600a8110156101035780806100fb9061021d565b9150506100e7565b50565b600080fd5b6000819050919050565b61011e8161010b565b811461012957600080fd5b50565b60008135905061013b81610115565b92915050565b60006020828403121561015757610156610106565b5b60006101658482850161012c565b91505092915050565b6101778161010b565b82525050565b6000602082019050610192600083018461016e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101d28261010b565b91506101dd8361010b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561021257610211610198565b5b828201905092915050565b60006102288261010b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361025a57610259610198565b5b60018201905091905056fea2646970667358221220ae11ee208089beda96431ff8ded70f88dc2501edc23baa48788f397bd894357a64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x188B85B4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x938B9CEB EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x141 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xB1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 GT PUSH2 0xA7 JUMPI DUP1 DUP3 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x9F SWAP1 PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xE3 JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0xD0 JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0xE3 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0xDB SWAP1 PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB4 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x103 JUMPI DUP1 DUP1 PUSH2 0xFB SWAP1 PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x10B JUMP JUMPDEST DUP2 EQ PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B DUP2 PUSH2 0x115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157 JUMPI PUSH2 0x156 PUSH2 0x106 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x165 DUP5 DUP3 DUP6 ADD PUSH2 0x12C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177 DUP2 PUSH2 0x10B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x192 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D2 DUP3 PUSH2 0x10B JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD DUP4 PUSH2 0x10B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x212 JUMPI PUSH2 0x211 PUSH2 0x198 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228 DUP3 PUSH2 0x10B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x25A JUMPI PUSH2 0x259 PUSH2 0x198 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE GT 0xEE KECCAK256 DUP1 DUP10 0xBE 0xDA SWAP7 NUMBER 0x1F 0xF8 0xDE 0xD7 0xF DUP9 0xDC 0x25 ADD 0xED 0xC2 EXTCODESIZE 0xAA BASEFEE PUSH25 0x8F397BD894357A64736F6C634300080F003300000000000000 ",
							"sourceMap": "56:485:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;88:284;;;:::i;:::-;;377:162;422:4;438:6;458;467:1;458:10;;454:61;475:2;470:1;:7;454:61;;503:1;498:6;;;;;:::i;:::-;;;479:3;;;;;:::i;:::-;;;;454:61;;;;531:1;524:8;;;377:162;;;:::o;88:284::-;133:6;129:167;149:2;145:1;:6;129:167;;;180:1;175;:6;172:52;201:8;172:52;245:1;240;:6;237:49;266:5;237:49;129:167;153:3;;;;;:::i;:::-;;;;129:167;;;;305:6;325:41;335:2;331:1;:6;325:41;;;352:3;;;;;:::i;:::-;;;;325:41;;;119:253;88:284::o;:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:180::-;1425:77;1422:1;1415:88;1522:4;1519:1;1512:15;1546:4;1543:1;1536:15;1563:305;1603:3;1622:20;1640:1;1622:20;:::i;:::-;1617:25;;1656:20;1674:1;1656:20;:::i;:::-;1651:25;;1810:1;1742:66;1738:74;1735:1;1732:81;1729:107;;;1816:18;;:::i;:::-;1729:107;1860:1;1857;1853:9;1846:16;;1563:305;;;;:::o;1874:233::-;1913:3;1936:24;1954:5;1936:24;:::i;:::-;1927:33;;1982:66;1975:5;1972:77;1969:103;;2052:18;;:::i;:::-;1969:103;2099:1;2092:5;2088:13;2081:20;;1874:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "133400",
								"executionCost": "177",
								"totalCost": "133577"
							},
							"external": {
								"loops()": "infinite",
								"sum(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 541,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 541,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 541,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 541,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 541,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 541,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 541,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 541,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 541,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ae11ee208089beda96431ff8ded70f88dc2501edc23baa48788f397bd894357a64736f6c634300080f0033",
									".code": [
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "188B85B4"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "938B9CEB"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 377,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 377,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 377,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 88,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 88,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 88,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 372,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 377,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 422,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 470,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 470,
											"end": 477,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 454,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 454,
											"end": 515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 503,
											"end": 504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 498,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 498,
											"end": 504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 498,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 498,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 498,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 498,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 498,
											"end": 504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 498,
											"end": 504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 479,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 479,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 515,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 454,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 377,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 129,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 149,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 145,
											"end": 146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 145,
											"end": 151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 129,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 129,
											"end": 296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 180,
											"end": 181,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 175,
											"end": 181,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 172,
											"end": 224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 201,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 172,
											"end": 224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 245,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 240,
											"end": 241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 240,
											"end": 246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 237,
											"end": 286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 266,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 237,
											"end": 286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 129,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 153,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 153,
											"end": 156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 153,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 129,
											"end": 296,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 129,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 366,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 325,
											"end": 366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 335,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 331,
											"end": 332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 337,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 325,
											"end": 366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 325,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 325,
											"end": 366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 352,
											"end": 355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 352,
											"end": 355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 352,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 352,
											"end": 355,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 352,
											"end": 355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 352,
											"end": 355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 352,
											"end": 355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 325,
											"end": 366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 366,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 325,
											"end": 366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1519,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 1527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1551,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1622,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1656,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1676,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1813,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1729,
											"end": 1836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1816,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1836,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1729,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 2107,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1954,
											"end": 1959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1936,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 2049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1969,
											"end": 2072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2052,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1969,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2092,
											"end": 2097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 2107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 2107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 2107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"HelloWorld/12ForAndWhileLoops.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"loops()": "938b9ceb",
							"sum(uint256)": "188b85b4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loops\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_n\",\"type\":\"uint256\"}],\"name\":\"sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HelloWorld/12ForAndWhileLoops.sol\":\"ForAndWhileLoops\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HelloWorld/12ForAndWhileLoops.sol\":{\"keccak256\":\"0x202a6a50366c09cc135078d1d41fe329c8d15cd69eba4cfdd575c05501c97e35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ee74ae49088973ca99ccea4d9c5a1c93f3fc3c94b8fb4fb3f462cacbdea9e07\",\"dweb:/ipfs/QmPwRURAhTiKs8v9D3kBhV5v2JBo1dAUibe1j44hMW1GNm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"HelloWorld/12ForAndWhileLoops.sol": {
				"ast": {
					"absolutePath": "HelloWorld/12ForAndWhileLoops.sol",
					"exportedSymbols": {
						"ForAndWhileLoops": [
							71
						]
					},
					"id": 72,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ForAndWhileLoops",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 71,
							"linearizedBaseContracts": [
								71
							],
							"name": "ForAndWhileLoops",
							"nameLocation": "65:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "119:253:0",
										"statements": [
											{
												"body": {
													"id": 26,
													"nodeType": "Block",
													"src": "158:138:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 14,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "175:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "175:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 19,
															"nodeType": "IfStatement",
															"src": "172:52:0",
															"trueBody": {
																"id": 18,
																"nodeType": "Block",
																"src": "183:41:0",
																"statements": [
																	{
																		"id": 17,
																		"nodeType": "Continue",
																		"src": "201:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 20,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "240:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "245:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "240:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 25,
															"nodeType": "IfStatement",
															"src": "237:49:0",
															"trueBody": {
																"id": 24,
																"nodeType": "Block",
																"src": "248:38:0",
																"statements": [
																	{
																		"id": 23,
																		"nodeType": "Break",
																		"src": "266:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "145:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "149:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "145:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"initializationExpression": {
													"assignments": [
														5
													],
													"declarations": [
														{
															"constant": false,
															"id": 5,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "138:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 27,
															"src": "133:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "133:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 7,
													"initialValue": {
														"hexValue": "30",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "142:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "133:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "153:3:0",
														"subExpression": {
															"id": 11,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "153:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 13,
													"nodeType": "ExpressionStatement",
													"src": "153:3:0"
												},
												"nodeType": "ForStatement",
												"src": "129:167:0"
											},
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "310:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "305:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "305:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 31,
												"initialValue": {
													"hexValue": "30",
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "314:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "305:10:0"
											},
											{
												"body": {
													"id": 38,
													"nodeType": "Block",
													"src": "338:28:0",
													"statements": [
														{
															"expression": {
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "352:3:0",
																"subExpression": {
																	"id": 35,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "352:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 37,
															"nodeType": "ExpressionStatement",
															"src": "352:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 32,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "331:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "335:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "331:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 39,
												"nodeType": "WhileStatement",
												"src": "325:41:0"
											}
										]
									},
									"functionSelector": "938b9ceb",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loops",
									"nameLocation": "97:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "119:0:0"
									},
									"scope": 71,
									"src": "88:284:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "428:111:0",
										"statements": [
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "443:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "438:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 48,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "438:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 50,
												"nodeType": "VariableDeclarationStatement",
												"src": "438:6:0"
											},
											{
												"body": {
													"id": 65,
													"nodeType": "Block",
													"src": "484:31:0",
													"statements": [
														{
															"expression": {
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 61,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "498:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 62,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "503:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "498:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 64,
															"nodeType": "ExpressionStatement",
															"src": "498:6:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 55,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "470:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 56,
														"name": "_n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "475:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 66,
												"initializationExpression": {
													"assignments": [
														52
													],
													"declarations": [
														{
															"constant": false,
															"id": 52,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "463:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 66,
															"src": "458:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 51,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "458:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 54,
													"initialValue": {
														"hexValue": "31",
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "458:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "479:3:0",
														"subExpression": {
															"id": 58,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "479:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 60,
													"nodeType": "ExpressionStatement",
													"src": "479:3:0"
												},
												"nodeType": "ForStatement",
												"src": "454:61:0"
											},
											{
												"expression": {
													"id": 67,
													"name": "s",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "531:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 47,
												"id": 68,
												"nodeType": "Return",
												"src": "524:8:0"
											}
										]
									},
									"functionSelector": "188b85b4",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sum",
									"nameLocation": "386:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_n",
												"nameLocation": "395:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "390:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:9:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "422:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "422:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:6:0"
									},
									"scope": 71,
									"src": "377:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 72,
							"src": "56:485:0",
							"usedErrors": []
						}
					],
					"src": "31:510:0"
				},
				"id": 0
			}
		}
	}
}